// Code generated by monad_gen, DO NOT EDIT.
package tctx

import (
	"github.com/csgura/fp"
	"github.com/csgura/fp/product"
)

func Map[A any, R any](m State[A], f func(A) R) State[R] {
	return FlatMap(m, fp.Compose2(f, Pure[R]))
}

// haskell 의 <$
// map . const 와 같은 함수
func Replace[A any, R any](s State[A], b R) State[R] {
	return Map(s, fp.Const[A](b))
}

func Map2[A any, B, R any](first State[A], second State[B], fab func(A, B) R) State[R] {
	return FlatMap(first, func(a A) State[R] {
		return Map(second, func(b B) R {
			return fab(a, b)
		})
	})
}

func Zip[A any, B any](first State[A], second State[B]) State[fp.Tuple2[A, B]] {
	return Map2(first, second, product.Tuple2)
}

func Ap[A any, B any](tfab State[fp.Func1[A, B]], ta State[A]) State[B] {
	return FlatMap(tfab, func(fab fp.Func1[A, B]) State[B] {
		return Map(ta, fab)
	})
}
