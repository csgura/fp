// Code generated by gombok, DO NOT EDIT.
package docexample

import (
	"github.com/csgura/fp"
	"github.com/csgura/fp/as"
	"github.com/csgura/fp/eq"
	"github.com/csgura/fp/hash"
	"github.com/csgura/fp/ord"
	"github.com/csgura/fp/product"
	"github.com/csgura/fp/test/internal/js"
	"github.com/csgura/fp/test/internal/show"
)

var EqPerson = eq.ContraMap(
	eq.Tuple2(eq.String, eq.Given[int]()),
	Person.AsTuple,
)

var HashablePerson = hash.ContraMap(
	hash.Tuple2(hash.String, hash.Number[int]()),
	Person.AsTuple,
)

var EqCar = eq.ContraMap(
	eq.Tuple3(eq.String, eq.String, eq.Given[int]()),
	Car.AsTuple,
)

var OrdCar = ord.ContraMap(
	ord.Tuple3(ord.Given[string](), ord.Given[string](), ord.Given[int]()),
	Car.AsTuple,
)

var EqCarsOwned = eq.ContraMap(
	eq.Tuple2(EqPerson, EqSortSeq(EqCar, OrdCar)),
	CarsOwned.AsTuple,
)

var ShowAddress = show.Generic(
	as.Generic(
		"docexample.Address",
		"Struct",
		fp.Compose(
			Address.AsTuple,
			as.HList3[string, string, string],
		),

		fp.Compose(
			product.TupleFromHList3[string, string, string],
			fp.Compose(
				as.Curried2(AddressBuilder.FromTuple)(AddressBuilder{}),
				AddressBuilder.Build,
			),
		),
	),
	show.StructHCons(
		show.String,
		show.StructHCons(
			show.String,
			show.StructHCons(
				show.String,
				show.HNil,
			),
		),
	),
)

var EncoderCar = js.EncoderContraMap(
	js.EncoderHConsLabelled(
		js.EncoderNamed[NamedCompany[string]](js.EncoderString),
		js.EncoderHConsLabelled(
			js.EncoderNamed[NamedModel[string]](js.EncoderString),
			js.EncoderHConsLabelled(
				js.EncoderNamed[NamedYear[int]](js.EncoderNumber[int]()),
				js.EncoderHNil,
			),
		),
	),
	fp.Compose(
		Car.AsLabelled,
		as.HList3Labelled[NamedCompany[string], NamedModel[string], NamedYear[int]],
	),
)
