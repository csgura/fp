// Code generated by gombok, DO NOT EDIT.
package testpk2

import (
	"github.com/csgura/fp"
	"github.com/csgura/fp/test/internal/testpk1"
	"github.com/csgura/fp/try"
	ftry "github.com/csgura/fp/try"
	"io"
	"time"
	"unsafe"
)

type APIAdaptor struct {
	IsActive       func() bool
	DefaultContext ApiContext
	DoCreate       func(a string, b int) (int, error)
	DefaultHello   string
	GetIsOk        func() bool
	DoIsZero       func(ptr unsafe.Pointer) bool
	OnReceive      func(msg string)
	DoSend         func(target string) fp.Try[string]
	DefaultTTL     time.Duration
	DoTestZero     func() (complex64, time.Time, *string, []int, [3]byte, map[string]any)
	DefaultTimeout time.Duration
	GetTimeout     func() time.Duration
	DoUpdate       func(a string, b int) (int, error)
	DoVarArgs      func(fmtstr string, args ...string)
	DoWrite        func(w io.Writer, b []byte) (int, error)
}

func (r *APIAdaptor) Active() bool {

	if r.IsActive != nil {
		return r.IsActive()
	}

	panic("not implemented")
}

func (r *APIAdaptor) Context() ApiContext {
	return r.DefaultContext
}

func (r *APIAdaptor) Create(a string, b int) (int, error) {

	if r.DoCreate != nil {
		return r.DoCreate(a, b)
	}

	return func(v int) (int, error) {
		return v, nil
	}(b)
}

func (r *APIAdaptor) Hello() string {
	return r.DefaultHello
}

func (r *APIAdaptor) IsOk() bool {

	if r.GetIsOk != nil {
		return r.GetIsOk()
	}

	panic("not implemented")
}

func (r *APIAdaptor) IsZero(ptr unsafe.Pointer) bool {

	if r.DoIsZero != nil {
		return r.DoIsZero(ptr)
	}

	panic("not implemented")
}

func (r *APIAdaptor) Receive(msg string) {

	if r.OnReceive != nil {
		r.OnReceive(msg)
		return
	}

}

func (r *APIAdaptor) Send(target string) fp.Try[string] {

	if r.DoSend != nil {
		return r.DoSend(target)
	}

	return func() fp.Try[string] {
		return ftry.Success("hello")
	}()
}

func (r *APIAdaptor) TTL() time.Duration {
	return r.DefaultTTL
}

func (r *APIAdaptor) Tell(target string) fp.Try[string] {
	return func(self AdaptorAPI, target string) fp.Try[string] {
		return self.Send(target)
	}(r, target)
}

func (r *APIAdaptor) TestZero() (complex64, time.Time, *string, []int, [3]byte, map[string]any) {

	if r.DoTestZero != nil {
		return r.DoTestZero()
	}

	return 0, time.Time{}, nil, nil, [3]byte{}, map[string]any{}
}

func (r *APIAdaptor) Timeout() time.Duration {

	var _zero time.Duration
	if r.DefaultTimeout != _zero {
		return r.DefaultTimeout
	}

	if r.GetTimeout != nil {
		return r.GetTimeout()
	}

	panic("not implemented")
}

func (r *APIAdaptor) Update(a string, b int) (int, error) {

	if r.DoUpdate != nil {
		return r.DoUpdate(a, b)
	}

	return 1, nil
}

func (r *APIAdaptor) VarArgs(fmtstr string, args ...string) {

	if r.DoVarArgs != nil {
		r.DoVarArgs(fmtstr, args...)
		return
	}

	panic("not implemented")
}

func (r *APIAdaptor) Write(w io.Writer, b []byte) (int, error) {

	if r.DoWrite != nil {
		return r.DoWrite(w, b)
	}

	return defaultWrite(r, w, b)
}

type APIAdaptorExtends struct {
	Extends      AdaptorAPI
	IsActive     func(self AdaptorAPI) bool
	DoContext    func(self AdaptorAPI) ApiContext
	DoCreate     func(self AdaptorAPI, a string, b int) (int, error)
	DefaultHello string
	GetHello     func(self AdaptorAPI) string
	GetIsOk      func(self AdaptorAPI) bool
	DoIsZero     func(self AdaptorAPI, ptr unsafe.Pointer) bool
	OnReceive    func(self AdaptorAPI, msg string)
	DoSend       func(self AdaptorAPI, target string) fp.Try[string]
	DefaultTTL   time.Duration
	DoTestZero   func(self AdaptorAPI) (complex64, time.Time, *string, []int, [3]byte, map[string]any)
	DoTimeout    func(self AdaptorAPI) time.Duration
	DoUpdate     func(self AdaptorAPI, a string, b int) (int, error)
	DoVarArgs    func(self AdaptorAPI, fmtstr string, args ...string)
	DoWrite      func(self AdaptorAPI, w io.Writer, b []byte) (int, error)
}

func (r *APIAdaptorExtends) Active() bool {
	return r.ActiveImpl(r)
}

func (r *APIAdaptorExtends) ActiveImpl(self AdaptorAPI) bool {

	if r.IsActive != nil {
		return r.IsActive(self)
	}

	if r.Extends != nil {
		type impl interface {
			ActiveImpl(self AdaptorAPI) bool
		}

		if super, ok := r.Extends.(impl); ok {
			return super.ActiveImpl(self)
		}
		return r.Extends.Active()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) Context() ApiContext {
	return r.ContextImpl(r)
}

func (r *APIAdaptorExtends) ContextImpl(self AdaptorAPI) ApiContext {

	if r.DoContext != nil {
		return r.DoContext(self)
	}

	if r.Extends != nil {
		type impl interface {
			ContextImpl(self AdaptorAPI) ApiContext
		}

		if super, ok := r.Extends.(impl); ok {
			return super.ContextImpl(self)
		}
		return r.Extends.Context()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) Create(a string, b int) (int, error) {
	return r.CreateImpl(r, a, b)
}

func (r *APIAdaptorExtends) CreateImpl(self AdaptorAPI, a string, b int) (int, error) {

	if r.DoCreate != nil {
		return r.DoCreate(self, a, b)
	}

	if r.Extends != nil {
		type impl interface {
			CreateImpl(self AdaptorAPI, a string, b int) (int, error)
		}

		if super, ok := r.Extends.(impl); ok {
			return super.CreateImpl(self, a, b)
		}
		return r.Extends.Create(a, b)
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) Hello() string {
	return r.HelloImpl(r)
}

func (r *APIAdaptorExtends) HelloImpl(self AdaptorAPI) string {
	if r.DefaultHello != "" {
		return r.DefaultHello
	}

	if r.GetHello != nil {
		return r.GetHello(self)
	}

	if r.Extends != nil {
		type impl interface {
			HelloImpl(self AdaptorAPI) string
		}

		if super, ok := r.Extends.(impl); ok {
			return super.HelloImpl(self)
		}
		return r.Extends.Hello()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) IsOk() bool {
	return r.IsOkImpl(r)
}

func (r *APIAdaptorExtends) IsOkImpl(self AdaptorAPI) bool {

	if r.GetIsOk != nil {
		return r.GetIsOk(self)
	}

	if r.Extends != nil {
		type impl interface {
			IsOkImpl(self AdaptorAPI) bool
		}

		if super, ok := r.Extends.(impl); ok {
			return super.IsOkImpl(self)
		}
		return r.Extends.IsOk()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) IsZero(ptr unsafe.Pointer) bool {
	return r.IsZeroImpl(r, ptr)
}

func (r *APIAdaptorExtends) IsZeroImpl(self AdaptorAPI, ptr unsafe.Pointer) bool {

	if r.DoIsZero != nil {
		return r.DoIsZero(self, ptr)
	}

	if r.Extends != nil {
		type impl interface {
			IsZeroImpl(self AdaptorAPI, ptr unsafe.Pointer) bool
		}

		if super, ok := r.Extends.(impl); ok {
			return super.IsZeroImpl(self, ptr)
		}
		return r.Extends.IsZero(ptr)
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) Receive(msg string) {
	r.ReceiveImpl(r, msg)
}

func (r *APIAdaptorExtends) ReceiveImpl(self AdaptorAPI, msg string) {

	if r.OnReceive != nil {
		r.OnReceive(self, msg)
		return
	}

	if r.Extends != nil {
		type impl interface {
			ReceiveImpl(self AdaptorAPI, msg string)
		}

		if super, ok := r.Extends.(impl); ok {
			super.ReceiveImpl(self, msg)
			return
		}
		r.Extends.Receive(msg)
		return
	}

}

func (r *APIAdaptorExtends) Send(target string) fp.Try[string] {
	return r.SendImpl(r, target)
}

func (r *APIAdaptorExtends) SendImpl(self AdaptorAPI, target string) fp.Try[string] {

	if r.DoSend != nil {
		return r.DoSend(self, target)
	}

	if r.Extends != nil {
		type impl interface {
			SendImpl(self AdaptorAPI, target string) fp.Try[string]
		}

		if super, ok := r.Extends.(impl); ok {
			return super.SendImpl(self, target)
		}
		return r.Extends.Send(target)
	}

	return try.Success("ok")
}

func (r *APIAdaptorExtends) TTL() time.Duration {
	return r.TTLImpl(r)
}

func (r *APIAdaptorExtends) TTLImpl(self AdaptorAPI) time.Duration {

	var _zero time.Duration
	if r.DefaultTTL != _zero {
		return r.DefaultTTL
	}

	if r.Extends != nil {
		type impl interface {
			TTLImpl(self AdaptorAPI) time.Duration
		}

		if super, ok := r.Extends.(impl); ok {
			return super.TTLImpl(self)
		}
		return r.Extends.TTL()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) Tell(target string) fp.Try[string] {
	return func(self AdaptorAPI, target string) fp.Try[string] {
		return self.Send(target)
	}(r, target)
}

func (r *APIAdaptorExtends) TestZero() (complex64, time.Time, *string, []int, [3]byte, map[string]any) {
	return r.TestZeroImpl(r)
}

func (r *APIAdaptorExtends) TestZeroImpl(self AdaptorAPI) (complex64, time.Time, *string, []int, [3]byte, map[string]any) {

	if r.DoTestZero != nil {
		return r.DoTestZero(self)
	}

	if r.Extends != nil {
		type impl interface {
			TestZeroImpl(self AdaptorAPI) (complex64, time.Time, *string, []int, [3]byte, map[string]any)
		}

		if super, ok := r.Extends.(impl); ok {
			return super.TestZeroImpl(self)
		}
		return r.Extends.TestZero()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) Timeout() time.Duration {
	return r.TimeoutImpl(r)
}

func (r *APIAdaptorExtends) TimeoutImpl(self AdaptorAPI) time.Duration {

	if r.DoTimeout != nil {
		return r.DoTimeout(self)
	}

	if r.Extends != nil {
		type impl interface {
			TimeoutImpl(self AdaptorAPI) time.Duration
		}

		if super, ok := r.Extends.(impl); ok {
			return super.TimeoutImpl(self)
		}
		return r.Extends.Timeout()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) Update(a string, b int) (int, error) {
	return r.UpdateImpl(r, a, b)
}

func (r *APIAdaptorExtends) UpdateImpl(self AdaptorAPI, a string, b int) (int, error) {

	if r.DoUpdate != nil {
		return r.DoUpdate(self, a, b)
	}

	if r.Extends != nil {
		type impl interface {
			UpdateImpl(self AdaptorAPI, a string, b int) (int, error)
		}

		if super, ok := r.Extends.(impl); ok {
			return super.UpdateImpl(self, a, b)
		}
		return r.Extends.Update(a, b)
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) VarArgs(fmtstr string, args ...string) {
	r.VarArgsImpl(r, fmtstr, args...)
}

func (r *APIAdaptorExtends) VarArgsImpl(self AdaptorAPI, fmtstr string, args ...string) {

	if r.DoVarArgs != nil {
		r.DoVarArgs(self, fmtstr, args...)
		return
	}

	if r.Extends != nil {
		type impl interface {
			VarArgsImpl(self AdaptorAPI, fmtstr string, args ...string)
		}

		if super, ok := r.Extends.(impl); ok {
			super.VarArgsImpl(self, fmtstr, args...)
			return
		}
		r.Extends.VarArgs(fmtstr, args...)
		return
	}

	panic("not implemented")
}

func (r *APIAdaptorExtends) Write(w io.Writer, b []byte) (int, error) {
	return r.WriteImpl(r, w, b)
}

func (r *APIAdaptorExtends) WriteImpl(self AdaptorAPI, w io.Writer, b []byte) (int, error) {

	if r.DoWrite != nil {
		return r.DoWrite(self, w, b)
	}

	if r.Extends != nil {
		type impl interface {
			WriteImpl(self AdaptorAPI, w io.Writer, b []byte) (int, error)
		}

		if super, ok := r.Extends.(impl); ok {
			return super.WriteImpl(self, w, b)
		}
		return r.Extends.Write(w, b)
	}

	return defaultWrite(self, w, b)
}

type APIAdaptorExtendsNotSelf struct {
	Extends      AdaptorAPI
	IsActive     func() bool
	DoContext    func() ApiContext
	DoCreate     func(a string, b int) (int, error)
	DefaultHello string
	GetHello     func() string
	GetIsOk      func() bool
	DoIsZero     func(ptr unsafe.Pointer) bool
	OnReceive    func(msg string)
	DoSend       func(target string) fp.Try[string]
	DoTTL        func() time.Duration
	DoTell       func(target string) fp.Try[string]
	DoTestZero   func() (complex64, time.Time, *string, []int, [3]byte, map[string]any)
	DoTimeout    func() time.Duration
	DoUpdate     func(a string, b int) (int, error)
	DoVarArgs    func(fmtstr string, args ...string)
	DoWrite      func(w io.Writer, b []byte) (int, error)
}

func (r *APIAdaptorExtendsNotSelf) Active() bool {

	if r.IsActive != nil {
		return r.IsActive()
	}

	if r.Extends != nil {
		return r.Extends.Active()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) Context() ApiContext {

	if r.DoContext != nil {
		return r.DoContext()
	}

	if r.Extends != nil {
		return r.Extends.Context()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) Create(a string, b int) (int, error) {

	if r.DoCreate != nil {
		return r.DoCreate(a, b)
	}

	if r.Extends != nil {
		return r.Extends.Create(a, b)
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) Hello() string {
	if r.DefaultHello != "" {
		return r.DefaultHello
	}

	if r.GetHello != nil {
		return r.GetHello()
	}

	if r.Extends != nil {
		return r.Extends.Hello()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) IsOk() bool {

	if r.GetIsOk != nil {
		return r.GetIsOk()
	}

	if r.Extends != nil {
		return r.Extends.IsOk()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) IsZero(ptr unsafe.Pointer) bool {

	if r.DoIsZero != nil {
		return r.DoIsZero(ptr)
	}

	if r.Extends != nil {
		return r.Extends.IsZero(ptr)
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) Receive(msg string) {

	if r.OnReceive != nil {
		r.OnReceive(msg)
		return
	}

	if r.Extends != nil {
		r.Extends.Receive(msg)
		return
	}

}

func (r *APIAdaptorExtendsNotSelf) Send(target string) fp.Try[string] {

	if r.DoSend != nil {
		return r.DoSend(target)
	}

	if r.Extends != nil {
		return r.Extends.Send(target)
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) TTL() time.Duration {

	if r.DoTTL != nil {
		return r.DoTTL()
	}

	if r.Extends != nil {
		return r.Extends.TTL()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) Tell(target string) fp.Try[string] {

	if r.DoTell != nil {
		return r.DoTell(target)
	}

	if r.Extends != nil {
		return r.Extends.Tell(target)
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) TestZero() (complex64, time.Time, *string, []int, [3]byte, map[string]any) {

	if r.DoTestZero != nil {
		return r.DoTestZero()
	}

	if r.Extends != nil {
		return r.Extends.TestZero()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) Timeout() time.Duration {

	if r.DoTimeout != nil {
		return r.DoTimeout()
	}

	if r.Extends != nil {
		return r.Extends.Timeout()
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) Update(a string, b int) (int, error) {

	if r.DoUpdate != nil {
		return r.DoUpdate(a, b)
	}

	if r.Extends != nil {
		return r.Extends.Update(a, b)
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) VarArgs(fmtstr string, args ...string) {

	if r.DoVarArgs != nil {
		r.DoVarArgs(fmtstr, args...)
		return
	}

	if r.Extends != nil {
		r.Extends.VarArgs(fmtstr, args...)
		return
	}

	panic("not implemented")
}

func (r *APIAdaptorExtendsNotSelf) Write(w io.Writer, b []byte) (int, error) {

	if r.DoWrite != nil {
		return r.DoWrite(w, b)
	}

	if r.Extends != nil {
		return r.Extends.Write(w, b)
	}

	return defaultWrite(r, w, b)
}

type AdTesterAdaptor struct {
	Extends testpk1.AdTester
	DoWrite func(self testpk1.AdTester, w io.Writer, b []byte) (int, error)
}

func (r *AdTesterAdaptor) Write(w io.Writer, b []byte) (int, error) {
	return r.WriteImpl(r, w, b)
}

func (r *AdTesterAdaptor) WriteImpl(self testpk1.AdTester, w io.Writer, b []byte) (int, error) {

	if r.DoWrite != nil {
		return r.DoWrite(self, w, b)
	}

	if r.Extends != nil {
		type impl interface {
			WriteImpl(self testpk1.AdTester, w io.Writer, b []byte) (int, error)
		}

		if super, ok := r.Extends.(impl); ok {
			return super.WriteImpl(self, w, b)
		}
		return r.Extends.Write(w, b)
	}

	return testpk1.DefaultWrite(b)
}

type APIAdaptorNotExtendsWithSelf struct {
	IsActive     func(self AdaptorAPI) bool
	DoContext    func(self AdaptorAPI) ApiContext
	DoCreate     func(self AdaptorAPI, a string, b int) (int, error)
	DefaultHello string
	GetHello     func(self AdaptorAPI) string
	GetIsOk      func(self AdaptorAPI) bool
	DoIsZero     func(self AdaptorAPI, ptr unsafe.Pointer) bool
	OnReceive    func(self AdaptorAPI, msg string)
	DoSend       func(self AdaptorAPI, target string) fp.Try[string]
	DoTTL        func(self AdaptorAPI) time.Duration
	DoTell       func(self AdaptorAPI, target string) fp.Try[string]
	DoTestZero   func(self AdaptorAPI) (complex64, time.Time, *string, []int, [3]byte, map[string]any)
	DoTimeout    func(self AdaptorAPI) time.Duration
	DoUpdate     func(self AdaptorAPI, a string, b int) (int, error)
	DoVarArgs    func(self AdaptorAPI, fmtstr string, args ...string)
	DoWrite      func(self AdaptorAPI, w io.Writer, b []byte) (int, error)
}

func (r *APIAdaptorNotExtendsWithSelf) Active() bool {

	if r.IsActive != nil {
		return r.IsActive(r)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) Context() ApiContext {

	if r.DoContext != nil {
		return r.DoContext(r)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) Create(a string, b int) (int, error) {

	if r.DoCreate != nil {
		return r.DoCreate(r, a, b)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) Hello() string {
	if r.DefaultHello != "" {
		return r.DefaultHello
	}

	if r.GetHello != nil {
		return r.GetHello(r)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) IsOk() bool {

	if r.GetIsOk != nil {
		return r.GetIsOk(r)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) IsZero(ptr unsafe.Pointer) bool {

	if r.DoIsZero != nil {
		return r.DoIsZero(r, ptr)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) Receive(msg string) {

	if r.OnReceive != nil {
		r.OnReceive(r, msg)
		return
	}

}

func (r *APIAdaptorNotExtendsWithSelf) Send(target string) fp.Try[string] {

	if r.DoSend != nil {
		return r.DoSend(r, target)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) TTL() time.Duration {

	if r.DoTTL != nil {
		return r.DoTTL(r)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) Tell(target string) fp.Try[string] {

	if r.DoTell != nil {
		return r.DoTell(r, target)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) TestZero() (complex64, time.Time, *string, []int, [3]byte, map[string]any) {

	if r.DoTestZero != nil {
		return r.DoTestZero(r)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) Timeout() time.Duration {

	if r.DoTimeout != nil {
		return r.DoTimeout(r)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) Update(a string, b int) (int, error) {

	if r.DoUpdate != nil {
		return r.DoUpdate(r, a, b)
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) VarArgs(fmtstr string, args ...string) {

	if r.DoVarArgs != nil {
		r.DoVarArgs(r, fmtstr, args...)
		return
	}

	panic("not implemented")
}

func (r *APIAdaptorNotExtendsWithSelf) Write(w io.Writer, b []byte) (int, error) {

	if r.DoWrite != nil {
		return r.DoWrite(r, w, b)
	}

	return defaultWrite(r, w, b)
}
