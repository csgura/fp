// Code generated by gombok, DO NOT EDIT.
package showorder

import (
	"github.com/csgura/fp"
	"github.com/csgura/fp/as"
	"github.com/csgura/fp/hlist"
	"github.com/csgura/fp/show"
)

func ShowHello() fp.Show[Hello] {
	return show.Generic(
		fp.Generic[Hello, fp.Labelled4[fp.RuntimeNamed[int], fp.RuntimeNamed[string], fp.RuntimeNamed[any], fp.RuntimeNamed[World]]]{
			Type: "showorder.Hello",
			Kind: "Struct",
			To: func(v Hello) fp.Labelled4[fp.RuntimeNamed[int], fp.RuntimeNamed[string], fp.RuntimeNamed[any], fp.RuntimeNamed[World]] {
				i0, i1, i2, i3 := v.A, v.B, v.AN, v.World
				return as.Labelled4(as.NamedWithTag("A", i0, ``), as.NamedWithTag("B", i1, ``), as.NamedWithTag("AN", i2, ``), as.NamedWithTag("World", i3, ``))
			},
			From: func(t fp.Labelled4[fp.RuntimeNamed[int], fp.RuntimeNamed[string], fp.RuntimeNamed[any], fp.RuntimeNamed[World]]) Hello {
				return Hello{A: t.I1.Value(), B: t.I2.Value(), AN: t.I3.Value(), World: t.I4.Value()}
			},
		},
		show.Labelled4(show.Named[fp.RuntimeNamed[int]](show.Int[int]()), show.Named[fp.RuntimeNamed[string]](show.String), show.Named[fp.RuntimeNamed[any]](ShowAny[any]()), show.Named[fp.RuntimeNamed[World]](ShowWorld())),
	)
}

func ShowWorld() fp.Show[World] {
	return show.Generic(
		fp.Generic[World, hlist.Cons[fp.RuntimeNamed[string], hlist.Nil]]{
			Type: "showorder.World",
			Kind: "Struct",
			To: func(v World) hlist.Cons[fp.RuntimeNamed[string], hlist.Nil] {
				i0 := v.Loc
				return hlist.Concat(as.NamedWithTag("Loc", i0, ``),
					hlist.Empty(),
				)
			},
			From: func(hl0 hlist.Cons[fp.RuntimeNamed[string], hlist.Nil]) World {
				i0 := hlist.Head(hl0)
				return World{Loc: i0.Value()}
			},
		},
		show.HConsLabelled(
			show.Named[fp.RuntimeNamed[string]](show.String),
			show.HNil,
		),
	)
}
