// Code generated by template_gen, DO NOT EDIT.
package minimal

type Tuple1[T1 any] struct {
	I1 T1
}

func AsTuple1[A1 any](a1 A1) Tuple1[A1] {
	return Tuple1[A1]{
		I1: a1,
	}
}

type Tuple2[T1, T2 any] struct {
	I1 T1
	I2 T2
}

func AsTuple2[A1, A2 any](a1 A1, a2 A2) Tuple2[A1, A2] {
	return Tuple2[A1, A2]{
		I1: a1,
		I2: a2,
	}
}

type Tuple3[T1, T2, T3 any] struct {
	I1 T1
	I2 T2
	I3 T3
}

func AsTuple3[A1, A2, A3 any](a1 A1, a2 A2, a3 A3) Tuple3[A1, A2, A3] {
	return Tuple3[A1, A2, A3]{
		I1: a1,
		I2: a2,
		I3: a3,
	}
}

type Tuple4[T1, T2, T3, T4 any] struct {
	I1 T1
	I2 T2
	I3 T3
	I4 T4
}

func AsTuple4[A1, A2, A3, A4 any](a1 A1, a2 A2, a3 A3, a4 A4) Tuple4[A1, A2, A3, A4] {
	return Tuple4[A1, A2, A3, A4]{
		I1: a1,
		I2: a2,
		I3: a3,
		I4: a4,
	}
}

type Tuple5[T1, T2, T3, T4, T5 any] struct {
	I1 T1
	I2 T2
	I3 T3
	I4 T4
	I5 T5
}

func AsTuple5[A1, A2, A3, A4, A5 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5) Tuple5[A1, A2, A3, A4, A5] {
	return Tuple5[A1, A2, A3, A4, A5]{
		I1: a1,
		I2: a2,
		I3: a3,
		I4: a4,
		I5: a5,
	}
}

type Tuple6[T1, T2, T3, T4, T5, T6 any] struct {
	I1 T1
	I2 T2
	I3 T3
	I4 T4
	I5 T5
	I6 T6
}

func AsTuple6[A1, A2, A3, A4, A5, A6 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6) Tuple6[A1, A2, A3, A4, A5, A6] {
	return Tuple6[A1, A2, A3, A4, A5, A6]{
		I1: a1,
		I2: a2,
		I3: a3,
		I4: a4,
		I5: a5,
		I6: a6,
	}
}

type Tuple7[T1, T2, T3, T4, T5, T6, T7 any] struct {
	I1 T1
	I2 T2
	I3 T3
	I4 T4
	I5 T5
	I6 T6
	I7 T7
}

func AsTuple7[A1, A2, A3, A4, A5, A6, A7 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7) Tuple7[A1, A2, A3, A4, A5, A6, A7] {
	return Tuple7[A1, A2, A3, A4, A5, A6, A7]{
		I1: a1,
		I2: a2,
		I3: a3,
		I4: a4,
		I5: a5,
		I6: a6,
		I7: a7,
	}
}

type Tuple8[T1, T2, T3, T4, T5, T6, T7, T8 any] struct {
	I1 T1
	I2 T2
	I3 T3
	I4 T4
	I5 T5
	I6 T6
	I7 T7
	I8 T8
}

func AsTuple8[A1, A2, A3, A4, A5, A6, A7, A8 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8) Tuple8[A1, A2, A3, A4, A5, A6, A7, A8] {
	return Tuple8[A1, A2, A3, A4, A5, A6, A7, A8]{
		I1: a1,
		I2: a2,
		I3: a3,
		I4: a4,
		I5: a5,
		I6: a6,
		I7: a7,
		I8: a8,
	}
}

type Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any] struct {
	I1 T1
	I2 T2
	I3 T3
	I4 T4
	I5 T5
	I6 T6
	I7 T7
	I8 T8
	I9 T9
}

func AsTuple9[A1, A2, A3, A4, A5, A6, A7, A8, A9 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9) Tuple9[A1, A2, A3, A4, A5, A6, A7, A8, A9] {
	return Tuple9[A1, A2, A3, A4, A5, A6, A7, A8, A9]{
		I1: a1,
		I2: a2,
		I3: a3,
		I4: a4,
		I5: a5,
		I6: a6,
		I7: a7,
		I8: a8,
		I9: a9,
	}
}

type Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
}

func AsTuple10[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10) Tuple10[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] {
	return Tuple10[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
	}
}

type Tuple11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
}

func AsTuple11[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11) Tuple11[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] {
	return Tuple11[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
	}
}

type Tuple12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
}

func AsTuple12[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12) Tuple12[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] {
	return Tuple12[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
	}
}

type Tuple13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
	I13 T13
}

func AsTuple13[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12, a13 A13) Tuple13[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] {
	return Tuple13[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
		I13: a13,
	}
}

type Tuple14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
	I13 T13
	I14 T14
}

func AsTuple14[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12, a13 A13, a14 A14) Tuple14[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] {
	return Tuple14[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
		I13: a13,
		I14: a14,
	}
}

type Tuple15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
	I13 T13
	I14 T14
	I15 T15
}

func AsTuple15[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12, a13 A13, a14 A14, a15 A15) Tuple15[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] {
	return Tuple15[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
		I13: a13,
		I14: a14,
		I15: a15,
	}
}

type Tuple16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
	I13 T13
	I14 T14
	I15 T15
	I16 T16
}

func AsTuple16[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12, a13 A13, a14 A14, a15 A15, a16 A16) Tuple16[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] {
	return Tuple16[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
		I13: a13,
		I14: a14,
		I15: a15,
		I16: a16,
	}
}

type Tuple17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
	I13 T13
	I14 T14
	I15 T15
	I16 T16
	I17 T17
}

func AsTuple17[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12, a13 A13, a14 A14, a15 A15, a16 A16, a17 A17) Tuple17[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] {
	return Tuple17[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
		I13: a13,
		I14: a14,
		I15: a15,
		I16: a16,
		I17: a17,
	}
}

type Tuple18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
	I13 T13
	I14 T14
	I15 T15
	I16 T16
	I17 T17
	I18 T18
}

func AsTuple18[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12, a13 A13, a14 A14, a15 A15, a16 A16, a17 A17, a18 A18) Tuple18[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] {
	return Tuple18[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
		I13: a13,
		I14: a14,
		I15: a15,
		I16: a16,
		I17: a17,
		I18: a18,
	}
}

type Tuple19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
	I13 T13
	I14 T14
	I15 T15
	I16 T16
	I17 T17
	I18 T18
	I19 T19
}

func AsTuple19[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12, a13 A13, a14 A14, a15 A15, a16 A16, a17 A17, a18 A18, a19 A19) Tuple19[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] {
	return Tuple19[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
		I13: a13,
		I14: a14,
		I15: a15,
		I16: a16,
		I17: a17,
		I18: a18,
		I19: a19,
	}
}

type Tuple20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
	I13 T13
	I14 T14
	I15 T15
	I16 T16
	I17 T17
	I18 T18
	I19 T19
	I20 T20
}

func AsTuple20[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12, a13 A13, a14 A14, a15 A15, a16 A16, a17 A17, a18 A18, a19 A19, a20 A20) Tuple20[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] {
	return Tuple20[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
		I13: a13,
		I14: a14,
		I15: a15,
		I16: a16,
		I17: a17,
		I18: a18,
		I19: a19,
		I20: a20,
	}
}

type Tuple21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any] struct {
	I1  T1
	I2  T2
	I3  T3
	I4  T4
	I5  T5
	I6  T6
	I7  T7
	I8  T8
	I9  T9
	I10 T10
	I11 T11
	I12 T12
	I13 T13
	I14 T14
	I15 T15
	I16 T16
	I17 T17
	I18 T18
	I19 T19
	I20 T20
	I21 T21
}

func AsTuple21[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21 any](a1 A1, a2 A2, a3 A3, a4 A4, a5 A5, a6 A6, a7 A7, a8 A8, a9 A9, a10 A10, a11 A11, a12 A12, a13 A13, a14 A14, a15 A15, a16 A16, a17 A17, a18 A18, a19 A19, a20 A20, a21 A21) Tuple21[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] {
	return Tuple21[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]{
		I1:  a1,
		I2:  a2,
		I3:  a3,
		I4:  a4,
		I5:  a5,
		I6:  a6,
		I7:  a7,
		I8:  a8,
		I9:  a9,
		I10: a10,
		I11: a11,
		I12: a12,
		I13: a13,
		I14: a14,
		I15: a15,
		I16: a16,
		I17: a17,
		I18: a18,
		I19: a19,
		I20: a20,
		I21: a21,
	}
}
